/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>


#define CT(KEY) &mt LC(KEY) KEY

#define MEH     LC(LS(LALT))
#define HYPER   LC(LS(LA(LGUI)))

#define U_RDO   LC(DE_Y)
#define U_PST   LC(V)
#define U_PST_P LS(LC(V))
#define U_CPY   LC(C)
#define U_CUT   LC(X)
#define U_UND   LC(DE_Z)

#include "include/keypos.h"
#include "behaviors.dtsi"
#include "combos.dtsi"
#include "macros.dtsi"
#include "mouse.dtsi"

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer  {
            if-layers = <NAV NUM>;
            then-layer = <FUN>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        DefaultLayer {
            bindings = <
&lt 3 ESCAPE      &kp Q         &kp W        &kp E         &kp R        &kp T        &kp Y        &kp U               &kp I           &kp O           &kp P         &kp BACKSPACE
&kp LEFT_CONTROL  &kp A         &kp S        &kp D         &kp F        &kp G        &kp H        &kp J               &kp K           &kp L           &kp MINUS     &mt RIGHT_CONTROL RETURN
&kp LEFT_SHIFT    &kp Z         &kp X        &kp C         &kp V        &kp B        &kp N        &kp M               &kp COMMA       &kp DOT         &kp SLASH     &kp RIGHT_SHIFT
&kp TAB           &kp LEFT_GUI  &lt 2 LANG2  &kp LEFT_ALT  &lt 1 LANG2  &kp SPACE    &lt 1 LANG1  &mt RIGHT_ALT LANG1 &kp LEFT_ARROW  &kp DOWN        &kp UP        &kp RIGHT
            >;
        };

    };
};
